version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: luma-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: luma
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: .
    container_name: luma-backend
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/luma
      UPLOAD_DIR: /app/uploads
      REPORTS_DIR: /app/reports
      OCR_PROVIDER: tesseract
      ADMIN_EMAILS: salmane@getluma.es
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./reports:/app/reports
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # pgAdmin (optional - database UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: luma-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@luma.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  # MinIO (S3-compatible storage - optional)
  minio:
    image: minio/minio:latest
    container_name: luma-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

volumes:
  postgres_data:
  minio_data:
